@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix : <http://org.shacl.repairs.tests/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# An owl:ObjectProperty has classes or unionOf as range.
# An owl:DatatypeProperty has literals as range (not classes or unionOf) -> todo: sufficient? maybe we need to check for literal types

:ObjectPropertyShape a sh:NodeShape ;
    sh:and (
        [ sh:class owl:ObjectProperty ]
        [ sh:not [
            sh:class owl:DatatypeProperty
            ]
        ]
        [ sh:property [
            sh:path rdfs:range ;
            sh:minCount 1 ;
            sh:not [ sh:node :LiteralShape ] ;
            sh:node :ClassShape
#            sh:or (
#                [ sh:node :ClassShape ]
#               [ sh:node  UnionOfShape ]
#            )
        ]]
    ) .

:DatatypePropertyShape a sh:NodeShape ;
    sh:and (
        [sh:class owl:DatatypeProperty ]
        [ sh:not [
            sh:class owl:ObjectProperty
            ]
        ]
        [ sh:property [
            sh:path rdfs:range ;
            sh:minCount 1 ;
            sh:not [ sh:node :ClassShape ] ;
            sh:node :LiteralShape
#            sh:or (
#                [ sh:hasValue xsd:string ]
#                [ sh:hasValue xsd:int ]
#            )
        ]]
    ) .

:Property a sh:NodeShape ;
    sh:targetClass rdf:Property , owl:ObjectProperty , owl:DatatypeProperty ;
    sh:targetSubjectsOf rdfs:domain , rdfs:subPropertyOf ;
    sh:targetSubjectsOf rdfs:range , rdfs:subPropertyOf ;
    sh:xone (
        [ sh:node :ObjectPropertyShape ]
        [ sh:node :DatatypePropertyShape ]
    ) .

:SubProperty a sh:NodeShape ;
    sh:targetSubjectsOf rdfs:subPropertyOf ;
    sh:xone (
        [   sh:class owl:ObjectProperty ;
            sh:property [
                sh:path rdfs:subPropertyOf ;
                sh:class owl:ObjectProperty
            ]
         ]
        [   sh:class owl:DatatypeProperty ;
            sh:property [
                sh:path rdfs:subPropertyOf ;
                sh:class owl:DatatypeProperty
            ]
         ]
    ) .

:ClassShape a sh:NodeShape ;
#    sh:targetClass rdfs:Class, owl:Class ;
    sh:class owl:Class .

:LiteralShape a :NodeShape ;
#sh:targetObjectsOf rdfs:range ;
sh:hasValue xsd:string .